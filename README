This the the code downloaded from:

http://www.insight-journal.org/browse/publication/876

An ITK Implementation of Physics-based Non-rigid Registration Method
Liu Y., Kot A., Drakopoulos F., Fedorov A., Enquobahrie A., Clatz O., Chrisochoides N.
CRTC Lab and Computer Science Department, Old Dominion University


Please use this identifier to cite or link to this publication: http://hdl.handle.net/10380/3382
Published in The Insight Journal - 2012 January-December.
Submitted by Yixun Liu on 08-21-2012.
As part of the ITK v4 project efforts, we have developed ITK filters for
physics-based non-rigid registration (PBNRR), which satisfies the following
requirements: account for tissue properties in the registration, improve
accuracy compared to rigid registration, and reduce execution time using GPU
and multi-core accelerators. The implementation has three main components: (1)
Feature Point Selection, (2) Block Matching (mapped to both multi-core and GPU
processors), and (3) a Robust Finite Element Solver. The use of multi-core and
GPU accelerators in ITK v4 provides substantial performance improvements. For
example, in average for the non-rigid registration of brain MRIs, the
performance of the Block Matching filter is about 12 times faster when 12
hyperthreaded multi-cores are used and about 540 times faster when the Quadro
6000 with 448 threads is used in Dell Workstation.



Configure ITK 4.3.0 with Python Bindings:

   system version of gccxml does not build
   manually download and install itk version of gccxml 

      wget http://itk.org/files/gccxml/gccxml-2012-08-08.tar.bz2

   cmake -DBUILD_SHARED_LIBS=ON  -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=$ITK_HOME -DITK_USE_GPU=ON -DOPENCL_INCLUDE_DIRS=$SDK_DIR/OpenCL/common/inc -DOPENCL_LIBRARIES=/usr/lib/nvidia-current/libOpenCL.so -DOPENCL_ROOT_DIR=$SDK_DIR/OpenCL -DITK_WRAP_PYTHON=ON -DITK_WRAP_double=ON -DINSTALL_WRAP_ITK_COMPATIBILITY=OFF -DITK_USE_SYSTEM_GCCXML=ON -DGCCXML=$ITK_GCCXML_INSTALL/bin/gccxml -DITK_USE_SYSTEM_SWIG=ON -DPYTHON_EXECUTABLE=$EPD_ROOT/bin/python -DPYTHON_INCLUDE_DIR=$EPD_ROOT/include/python2.7 -DPYTHON_LIBRARY=$EPD_ROOT/lib/libpython2.7.so ../InsightToolkit-4.3.0


Configure ITK:
   cmake -DBUILD_SHARED_LIBS=ON  -DCMAKE_BUILD_TYPE=Debug -DBUILD_EXAMPLES=ON -DBUILD_TESTING=OFF -DCMAKE_VERBOSE_MAKEFILE=ON -DCMAKE_INSTALL_PREFIX=$ITK_HOME -DITK_USE_GPU=ON -DOPENCL_INCLUDE_DIRS=$SDK_DIR/OpenCL/common/inc -DOPENCL_LIBRARIES=/usr/lib/nvidia-current/libOpenCL.so -DOPENCL_ROOT_DIR=$SDK_DIR/OpenCL ../InsightToolkit-4.3.0


Build ITK:

   make -j 8;make install
 

 
 



Example Output:

SCRGP2$ cd InsightJournalInputsCases/Case1
SCRGP2$ ls
FixedImage.nii.gz  Mesh.vtk  MovingImage.nii.gz  MovingMask.nii.gz
SCRGP2$ ../../PBNRR ./FixedImage.nii.gz ./MovingImage.nii.gz ./MovingMask.nii.gz ./Mesh.vtk test.vtk
*********************************************
Moving Image : ./MovingImage.nii.gz
Fixed Image : ./FixedImage.nii.gz
Mask Image : ./MovingMask.nii.gz
Mesh : ./Mesh.vtk
Warped Image : test.vtk
*********************************************

Filter: PhysicsBasedNonRigidRegistrationMethod (0x1fe6a40)
  RTTI typeinfo:   itk::fem::PhysicsBasedNonRigidRegistrationMethod<itk::Image<float, 3u>, itk::Image<float, 3u>, itk::Image<float, 3u>, itk::Mesh<float, 3u, itk::DefaultStaticMeshTraits<float, 3u, 3u, float, float, float> >, itk::Image<itk::Vector<float, 3u>, 3u> >
  Reference Count: 2
  Modified Time: 92050
  Debug: Off
  Observers:
    none
  Inputs:
    Primary: (0)
    FixedImage: (0x1fcc0b0) *
    MaskImage: (0x1fd5410) *
    Mesh: (0x1fda240) *
    MovingImage: (0x1fd0a20) *
  Required Input Names: FixedImage, MaskImage, Mesh, MovingImage
  Outputs:
    Primary: (0x1ff2170)
  NumberOfIndexedInputs: 0
  NumberOfRequiredInputs: 0
  NumberOfIndexedOutputs: 1
  NumberOfRequiredOutputs: 1
  Number Of Threads: 24
  ReleaseDataFlag: Off
  ReleaseDataBeforeUpdateFlag: Off
  AbortGenerateData: Off
  Progress: 0
  Multithreader:
    RTTI typeinfo:   itk::MultiThreader
    Reference Count: 1
    Modified Time: 91893
    Debug: Off
    Observers:
      none
    Thread Count: 24
    Global Maximum Number Of Threads: 128
    Global Default Number Of Threads: 24
  CoordinateTolerance: 1e-06
  DirectionTolerance: 1e-06
  m_BlockRadius: [1, 1, 1]
  m_SearchRadius: [5, 5, 5]
  m_SelectFraction: 0.05
  m_NonConnectivity: 0
  m_ApproximationSteps: 10
  m_OutlierRejectionSteps: 10

Done.

Time for creating the Deformed Image : 0 sec


Total running time : 169.36 sec
